(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[279],{9954:function(e,t,r){"use strict";r.d(t,{f4:function(){return a},Ec:function(){return i}});var s=r(9895);class i{constructor(e){this.sqlite=e,this._connectionDict=new Map}async initWebStore(){try{return await this.sqlite.initWebStore(),Promise.resolve()}catch(e){return Promise.reject(e)}}async saveToStore(e){try{return await this.sqlite.saveToStore({database:e}),Promise.resolve()}catch(e){return Promise.reject(e)}}async saveToLocalDisk(e){try{return await this.sqlite.saveToLocalDisk({database:e}),Promise.resolve()}catch(e){return Promise.reject(e)}}async getFromLocalDiskToStore(e){try{return await this.sqlite.getFromLocalDiskToStore({overwrite:null==e||e}),Promise.resolve()}catch(e){return Promise.reject(e)}}async echo(e){try{let t=await this.sqlite.echo({value:e});return Promise.resolve(t)}catch(e){return Promise.reject(e)}}async isSecretStored(){try{let e=await this.sqlite.isSecretStored();return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async setEncryptionSecret(e){try{return await this.sqlite.setEncryptionSecret({passphrase:e}),Promise.resolve()}catch(e){return Promise.reject(e)}}async changeEncryptionSecret(e,t){try{return await this.sqlite.changeEncryptionSecret({passphrase:e,oldpassphrase:t}),Promise.resolve()}catch(e){return Promise.reject(e)}}async clearEncryptionSecret(){try{return await this.sqlite.clearEncryptionSecret(),Promise.resolve()}catch(e){return Promise.reject(e)}}async checkEncryptionSecret(e){try{let t=await this.sqlite.checkEncryptionSecret({passphrase:e});return Promise.resolve(t)}catch(e){return Promise.reject(e)}}async addUpgradeStatement(e,t){try{return e.endsWith(".db")&&(e=e.slice(0,-3)),await this.sqlite.addUpgradeStatement({database:e,upgrade:t}),Promise.resolve()}catch(e){return Promise.reject(e)}}async createConnection(e,t,r,s,i){try{e.endsWith(".db")&&(e=e.slice(0,-3)),await this.sqlite.createConnection({database:e,encrypted:t,mode:r,version:s,readonly:i});let a=new n(e,i,this.sqlite),o=i?`RO_${e}`:`RW_${e}`;return this._connectionDict.set(o,a),Promise.resolve(a)}catch(e){return Promise.reject(e)}}async closeConnection(e,t){try{e.endsWith(".db")&&(e=e.slice(0,-3)),await this.sqlite.closeConnection({database:e,readonly:t});let r=t?`RO_${e}`:`RW_${e}`;return this._connectionDict.delete(r),Promise.resolve()}catch(e){return Promise.reject(e)}}async isConnection(e,t){let r={};e.endsWith(".db")&&(e=e.slice(0,-3));let s=t?`RO_${e}`:`RW_${e}`;return r.result=this._connectionDict.has(s),Promise.resolve(r)}async retrieveConnection(e,t){e.endsWith(".db")&&(e=e.slice(0,-3));let r=t?`RO_${e}`:`RW_${e}`;if(!this._connectionDict.has(r))return Promise.reject(`Connection ${e} does not exist`);{let t=this._connectionDict.get(r);return void 0!==t?Promise.resolve(t):Promise.reject(`Connection ${e} is undefined`)}}async getNCDatabasePath(e,t){try{let r=await this.sqlite.getNCDatabasePath({path:e,database:t});return Promise.resolve(r)}catch(e){return Promise.reject(e)}}async createNCConnection(e,t){try{await this.sqlite.createNCConnection({databasePath:e,version:t});let r=new n(e,!0,this.sqlite),s=`RO_${e})`;return this._connectionDict.set(s,r),Promise.resolve(r)}catch(e){return Promise.reject(e)}}async closeNCConnection(e){try{await this.sqlite.closeNCConnection({databasePath:e});let t=`RO_${e})`;return this._connectionDict.delete(t),Promise.resolve()}catch(e){return Promise.reject(e)}}async isNCConnection(e){let t={},r=`RO_${e})`;return t.result=this._connectionDict.has(r),Promise.resolve(t)}async retrieveNCConnection(e){if(!this._connectionDict.has(e))return Promise.reject(`Connection ${e} does not exist`);{let t=`RO_${e})`,r=this._connectionDict.get(t);return void 0!==r?Promise.resolve(r):Promise.reject(`Connection ${e} is undefined`)}}async isNCDatabase(e){try{let t=await this.sqlite.isNCDatabase({databasePath:e});return Promise.resolve(t)}catch(e){return Promise.reject(e)}}async retrieveAllConnections(){return this._connectionDict}async closeAllConnections(){let e=new Map;try{for(let t of this._connectionDict.keys()){let r=t.substring(3),s="RO_"===t.substring(0,3);await this.sqlite.closeConnection({database:r,readonly:s}),e.set(t,null)}for(let t of e.keys())this._connectionDict.delete(t);return Promise.resolve()}catch(e){return Promise.reject(e)}}async checkConnectionsConsistency(){try{let e=[...this._connectionDict.keys()],t=[],r=[];for(let s of e)t.push(s.substring(0,2)),r.push(s.substring(3));let s=await this.sqlite.checkConnectionsConsistency({dbNames:r,openModes:t});return s.result||(this._connectionDict=new Map),Promise.resolve(s)}catch(e){return this._connectionDict=new Map,Promise.reject(e)}}async importFromJson(e){try{let t=await this.sqlite.importFromJson({jsonstring:e});return Promise.resolve(t)}catch(e){return Promise.reject(e)}}async isJsonValid(e){try{let t=await this.sqlite.isJsonValid({jsonstring:e});return Promise.resolve(t)}catch(e){return Promise.reject(e)}}async copyFromAssets(e){try{return await this.sqlite.copyFromAssets({overwrite:null==e||e}),Promise.resolve()}catch(e){return Promise.reject(e)}}async getFromHTTPRequest(e,t){try{return await this.sqlite.getFromHTTPRequest({url:e,overwrite:null==t||t}),Promise.resolve()}catch(e){return Promise.reject(e)}}async isDatabaseEncrypted(e){e.endsWith(".db")&&(e=e.slice(0,-3));try{let t=await this.sqlite.isDatabaseEncrypted({database:e});return Promise.resolve(t)}catch(e){return Promise.reject(e)}}async isInConfigEncryption(){try{let e=await this.sqlite.isInConfigEncryption();return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async isInConfigBiometricAuth(){try{let e=await this.sqlite.isInConfigBiometricAuth();return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async isDatabase(e){e.endsWith(".db")&&(e=e.slice(0,-3));try{let t=await this.sqlite.isDatabase({database:e});return Promise.resolve(t)}catch(e){return Promise.reject(e)}}async getDatabaseList(){try{let e=(await this.sqlite.getDatabaseList()).values;return e.sort(),Promise.resolve({values:e})}catch(e){return Promise.reject(e)}}async getMigratableDbList(e){try{let t=await this.sqlite.getMigratableDbList({folderPath:e||"default"});return Promise.resolve(t)}catch(e){return Promise.reject(e)}}async addSQLiteSuffix(e,t){try{let r=await this.sqlite.addSQLiteSuffix({folderPath:e||"default",dbNameList:t||[]});return Promise.resolve(r)}catch(e){return Promise.reject(e)}}async deleteOldDatabases(e,t){try{let r=await this.sqlite.deleteOldDatabases({folderPath:e||"default",dbNameList:t||[]});return Promise.resolve(r)}catch(e){return Promise.reject(e)}}async moveDatabasesAndAddSuffix(e,t){return this.sqlite.moveDatabasesAndAddSuffix({folderPath:e||"default",dbNameList:t||[]})}}class n{constructor(e,t,r){this.dbName=e,this.readonly=t,this.sqlite=r}getConnectionDBName(){return this.dbName}getConnectionReadOnly(){return this.readonly}async open(){try{return await this.sqlite.open({database:this.dbName,readonly:this.readonly}),Promise.resolve()}catch(e){return Promise.reject(e)}}async close(){try{return await this.sqlite.close({database:this.dbName,readonly:this.readonly}),Promise.resolve()}catch(e){return Promise.reject(e)}}async beginTransaction(){try{let e=await this.sqlite.beginTransaction({database:this.dbName});return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async commitTransaction(){try{let e=await this.sqlite.commitTransaction({database:this.dbName});return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async rollbackTransaction(){try{let e=await this.sqlite.rollbackTransaction({database:this.dbName});return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async isTransactionActive(){try{let e=await this.sqlite.isTransactionActive({database:this.dbName});return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async loadExtension(e){try{return await this.sqlite.loadExtension({database:this.dbName,path:e,readonly:this.readonly}),Promise.resolve()}catch(e){return Promise.reject(e)}}async enableLoadExtension(e){try{return await this.sqlite.enableLoadExtension({database:this.dbName,toggle:e,readonly:this.readonly}),Promise.resolve()}catch(e){return Promise.reject(e)}}async getUrl(){try{let e=await this.sqlite.getUrl({database:this.dbName,readonly:this.readonly});return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async getVersion(){try{let e=await this.sqlite.getVersion({database:this.dbName,readonly:this.readonly});return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async getTableList(){try{let e=await this.sqlite.getTableList({database:this.dbName,readonly:this.readonly});return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async execute(e,t=!0,r=!0){try{if(this.readonly)return Promise.reject("not allowed in read-only mode");{let s=await this.sqlite.execute({database:this.dbName,statements:e,transaction:t,readonly:!1,isSQL92:r});return Promise.resolve(s)}}catch(e){return Promise.reject(e)}}async query(e,t,r=!0){let s;try{return s=t&&t.length>0?await this.sqlite.query({database:this.dbName,statement:e,values:t,readonly:this.readonly,isSQL92:!0}):await this.sqlite.query({database:this.dbName,statement:e,values:[],readonly:this.readonly,isSQL92:r}),s=await this.reorderRows(s),Promise.resolve(s)}catch(e){return Promise.reject(e)}}async run(e,t,r=!0,s="no",i=!0){let n;try{if(!this.readonly)return(n=t&&t.length>0?await this.sqlite.run({database:this.dbName,statement:e,values:t,transaction:r,readonly:!1,returnMode:s,isSQL92:!0}):await this.sqlite.run({database:this.dbName,statement:e,values:[],transaction:r,readonly:!1,returnMode:s,isSQL92:i})).changes=await this.reorderRows(n.changes),Promise.resolve(n);return Promise.reject("not allowed in read-only mode")}catch(e){return Promise.reject(e)}}async executeSet(e,t=!0,r="no",s=!0){let i;try{if(!this.readonly)return(i=await this.sqlite.executeSet({database:this.dbName,set:e,transaction:t,readonly:!1,returnMode:r,isSQL92:s})).changes=await this.reorderRows(i.changes),Promise.resolve(i);return Promise.reject("not allowed in read-only mode")}catch(e){return Promise.reject(e)}}async isExists(){try{let e=await this.sqlite.isDBExists({database:this.dbName,readonly:this.readonly});return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async isTable(e){try{let t=await this.sqlite.isTableExists({database:this.dbName,table:e,readonly:this.readonly});return Promise.resolve(t)}catch(e){return Promise.reject(e)}}async isDBOpen(){try{let e=await this.sqlite.isDBOpen({database:this.dbName,readonly:this.readonly});return Promise.resolve(e)}catch(e){return Promise.reject(e)}}async delete(){try{if(!this.readonly)return await this.sqlite.deleteDatabase({database:this.dbName,readonly:!1}),Promise.resolve();return Promise.reject("not allowed in read-only mode")}catch(e){return Promise.reject(e)}}async createSyncTable(){try{if(this.readonly)return Promise.reject("not allowed in read-only mode");{let e=await this.sqlite.createSyncTable({database:this.dbName,readonly:!1});return Promise.resolve(e)}}catch(e){return Promise.reject(e)}}async setSyncDate(e){try{if(!this.readonly)return await this.sqlite.setSyncDate({database:this.dbName,syncdate:e,readonly:!1}),Promise.resolve();return Promise.reject("not allowed in read-only mode")}catch(e){return Promise.reject(e)}}async getSyncDate(){try{let e=await this.sqlite.getSyncDate({database:this.dbName,readonly:this.readonly}),t="";return e.syncDate>0&&(t=new Date(1e3*e.syncDate).toISOString()),Promise.resolve(t)}catch(e){return Promise.reject(e)}}async exportToJson(e,t=!1){try{let r=await this.sqlite.exportToJson({database:this.dbName,jsonexportmode:e,readonly:this.readonly,encrypted:t});return Promise.resolve(r)}catch(e){return Promise.reject(e)}}async deleteExportedRows(){try{if(!this.readonly)return await this.sqlite.deleteExportedRows({database:this.dbName,readonly:!1}),Promise.resolve();return Promise.reject("not allowed in read-only mode")}catch(e){return Promise.reject(e)}}async executeTransaction(e,t=!0){let r=0;if(this.readonly)return Promise.reject("not allowed in read-only mode");if(await this.sqlite.beginTransaction({database:this.dbName}),!await this.sqlite.isTransactionActive({database:this.dbName}))return Promise.reject("After Begin Transaction, no transaction active");try{for(let s of e){if("object"!=typeof s||!("statement"in s))throw Error("Error a task.statement must be provided");if("values"in s&&s.values&&s.values.length>0){let e=s.statement.toUpperCase().includes("RETURNING")?"all":"no",i=await this.sqlite.run({database:this.dbName,statement:s.statement,values:s.values,transaction:!1,readonly:!1,returnMode:e,isSQL92:t});if(i.changes.changes<0)throw Error("Error in transaction method run ");r+=i.changes.changes}else{let e=await this.sqlite.execute({database:this.dbName,statements:s.statement,transaction:!1,readonly:!1});if(e.changes.changes<0)throw Error("Error in transaction method execute ");r+=e.changes.changes}}let s=await this.sqlite.commitTransaction({database:this.dbName}),i={changes:{changes:r+=s.changes.changes}};return Promise.resolve(i)}catch(t){let e=t.message?t.message:t;return await this.sqlite.rollbackTransaction({database:this.dbName}),Promise.reject(e)}}async reorderRows(e){if(e?.values&&"object"==typeof e.values[0]&&Object.keys(e.values[0]).includes("ios_columns")){let t=e.values[0].ios_columns,r=[];for(let s=1;s<e.values.length;s++){let i=e.values[s],n={};for(let e of t)n[e]=i[e];r.push(n)}e.values=r}return Promise.resolve(e)}}let a=(0,s.fo)("CapacitorSQLite",{web:()=>r.e(883).then(r.bind(r,4883)).then(e=>new e.CapacitorSQLiteWeb),electron:()=>window.CapacitorCustomPlatform.plugins.CapacitorSQLite})},9895:function(e,t,r){"use strict";var s,i,n,a;r.d(t,{Uw:function(){return h},dV:function(){return d},fo:function(){return u},xz:function(){return c}});let o=(i="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==r.g?r.g:{}).CapacitorPlatforms=(e=>{let t=new Map;t.set("web",{name:"web"});let r=e.CapacitorPlatforms||{currentPlatform:{name:"web"},platforms:t};return r.addPlatform=(e,t)=>{r.platforms.set(e,t)},r.setPlatform=e=>{r.platforms.has(e)&&(r.currentPlatform=r.platforms.get(e))},r})(i);o.addPlatform,o.setPlatform,(n=s||(s={})).Unimplemented="UNIMPLEMENTED",n.Unavailable="UNAVAILABLE";class c extends Error{constructor(e,t,r){super(e),this.message=e,this.code=t,this.data=r}}let l=e=>{var t,r;return(null==e?void 0:e.androidBridge)?"android":(null===(r=null===(t=null==e?void 0:e.webkit)||void 0===t?void 0:t.messageHandlers)||void 0===r?void 0:r.bridge)?"ios":"web"},d=(a="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==r.g?r.g:{}).Capacitor=(e=>{var t,r,i,n,a;let o=e.CapacitorCustomPlatform||null,d=e.Capacitor||{},u=d.Plugins=d.Plugins||{},h=e.CapacitorPlatforms,m=(null===(t=null==h?void 0:h.currentPlatform)||void 0===t?void 0:t.getPlatform)||(()=>null!==o?o.name:l(e)),y=(null===(r=null==h?void 0:h.currentPlatform)||void 0===r?void 0:r.isNativePlatform)||(()=>"web"!==m()),b=(null===(i=null==h?void 0:h.currentPlatform)||void 0===i?void 0:i.isPluginAvailable)||(e=>{let t=P.get(e);return!!((null==t?void 0:t.platforms.has(m()))||w(e))}),w=(null===(n=null==h?void 0:h.currentPlatform)||void 0===n?void 0:n.getPluginHeader)||(e=>{var t;return null===(t=d.PluginHeaders)||void 0===t?void 0:t.find(t=>t.name===e)}),P=new Map,v=(null===(a=null==h?void 0:h.currentPlatform)||void 0===a?void 0:a.registerPlugin)||((e,t={})=>{let r;let i=P.get(e);if(i)return console.warn(`Capacitor plugin "${e}" already registered. Cannot register plugins twice.`),i.proxy;let n=m(),a=w(e),l=async()=>(!r&&n in t?r=r="function"==typeof t[n]?await t[n]():t[n]:null!==o&&!r&&"web"in t&&(r=r="function"==typeof t.web?await t.web():t.web),r),h=(t,r)=>{var i,o;if(a){let s=null==a?void 0:a.methods.find(e=>r===e.name);if(s)return"promise"===s.rtype?t=>d.nativePromise(e,r.toString(),t):(t,s)=>d.nativeCallback(e,r.toString(),t,s);if(t)return null===(i=t[r])||void 0===i?void 0:i.bind(t)}else if(t)return null===(o=t[r])||void 0===o?void 0:o.bind(t);else throw new c(`"${e}" plugin is not implemented on ${n}`,s.Unimplemented)},y=t=>{let r;let i=(...i)=>{let a=l().then(a=>{let o=h(a,t);if(o){let e=o(...i);return r=null==e?void 0:e.remove,e}throw new c(`"${e}.${t}()" is not implemented on ${n}`,s.Unimplemented)});return"addListener"===t&&(a.remove=async()=>r()),a};return i.toString=()=>`${t.toString()}() { [capacitor code] }`,Object.defineProperty(i,"name",{value:t,writable:!1,configurable:!1}),i},b=y("addListener"),v=y("removeListener"),f=(e,t)=>{let r=b({eventName:e},t),s=async()=>{v({eventName:e,callbackId:await r},t)},i=new Promise(e=>r.then(()=>e({remove:s})));return i.remove=async()=>{console.warn("Using addListener() without 'await' is deprecated."),await s()},i},p=new Proxy({},{get(e,t){switch(t){case"$$typeof":return;case"toJSON":return()=>({});case"addListener":return a?f:b;case"removeListener":return v;default:return y(t)}}});return u[e]=p,P.set(e,{name:e,proxy:p,platforms:new Set([...Object.keys(t),...a?[n]:[]])}),p});return d.convertFileSrc||(d.convertFileSrc=e=>e),d.getPlatform=m,d.handleError=t=>e.console.error(t),d.isNativePlatform=y,d.isPluginAvailable=b,d.pluginMethodNoop=(e,t,r)=>Promise.reject(`${r} does not have an implementation of "${t}".`),d.registerPlugin=v,d.Exception=c,d.DEBUG=!!d.DEBUG,d.isLoggingEnabled=!!d.isLoggingEnabled,d.platform=d.getPlatform(),d.isNative=d.isNativePlatform(),d})(a),u=d.registerPlugin;d.Plugins;class h{constructor(e){this.listeners={},this.retainedEventArguments={},this.windowListeners={},e&&(console.warn(`Capacitor WebPlugin "${e.name}" config object was deprecated in v3 and will be removed in v4.`),this.config=e)}addListener(e,t){let r=!1;this.listeners[e]||(this.listeners[e]=[],r=!0),this.listeners[e].push(t);let s=this.windowListeners[e];return s&&!s.registered&&this.addWindowListener(s),r&&this.sendRetainedArgumentsForEvent(e),Promise.resolve({remove:async()=>this.removeListener(e,t)})}async removeAllListeners(){for(let e in this.listeners={},this.windowListeners)this.removeWindowListener(this.windowListeners[e]);this.windowListeners={}}notifyListeners(e,t,r){let s=this.listeners[e];if(!s){if(r){let r=this.retainedEventArguments[e];r||(r=[]),r.push(t),this.retainedEventArguments[e]=r}return}s.forEach(e=>e(t))}hasListeners(e){return!!this.listeners[e].length}registerWindowListener(e,t){this.windowListeners[t]={registered:!1,windowEventName:e,pluginEventName:t,handler:e=>{this.notifyListeners(t,e)}}}unimplemented(e="not implemented"){return new d.Exception(e,s.Unimplemented)}unavailable(e="not available"){return new d.Exception(e,s.Unavailable)}async removeListener(e,t){let r=this.listeners[e];if(!r)return;let s=r.indexOf(t);this.listeners[e].splice(s,1),this.listeners[e].length||this.removeWindowListener(this.windowListeners[e])}addWindowListener(e){window.addEventListener(e.windowEventName,e.handler),e.registered=!0}removeWindowListener(e){e&&(window.removeEventListener(e.windowEventName,e.handler),e.registered=!1)}sendRetainedArgumentsForEvent(e){let t=this.retainedEventArguments[e];t&&(delete this.retainedEventArguments[e],t.forEach(t=>{this.notifyListeners(e,t)}))}}let m=e=>encodeURIComponent(e).replace(/%(2[346B]|5E|60|7C)/g,decodeURIComponent).replace(/[()]/g,escape),y=e=>e.replace(/(%[\dA-F]{2})+/gi,decodeURIComponent);class b extends h{async getCookies(){let e=document.cookie,t={};return e.split(";").forEach(e=>{if(e.length<=0)return;let[r,s]=e.replace(/=/,"CAP_COOKIE").split("CAP_COOKIE");r=y(r).trim(),s=y(s).trim(),t[r]=s}),t}async setCookie(e){try{let t=m(e.key),r=m(e.value),s=`; expires=${(e.expires||"").replace("expires=","")}`,i=(e.path||"/").replace("path=",""),n=null!=e.url&&e.url.length>0?`domain=${e.url}`:"";document.cookie=`${t}=${r||""}${s}; path=${i}; ${n};`}catch(e){return Promise.reject(e)}}async deleteCookie(e){try{document.cookie=`${e.key}=; Max-Age=0`}catch(e){return Promise.reject(e)}}async clearCookies(){try{for(let e of document.cookie.split(";")||[])document.cookie=e.replace(/^ +/,"").replace(/=.*/,`=;expires=${new Date().toUTCString()};path=/`)}catch(e){return Promise.reject(e)}}async clearAllCookies(){try{await this.clearCookies()}catch(e){return Promise.reject(e)}}}u("CapacitorCookies",{web:()=>new b});let w=async e=>new Promise((t,r)=>{let s=new FileReader;s.onload=()=>{let e=s.result;t(e.indexOf(",")>=0?e.split(",")[1]:e)},s.onerror=e=>r(e),s.readAsDataURL(e)}),P=(e={})=>{let t=Object.keys(e);return Object.keys(e).map(e=>e.toLocaleLowerCase()).reduce((r,s,i)=>(r[s]=e[t[i]],r),{})},v=(e,t=!0)=>e?Object.entries(e).reduce((e,r)=>{let s,i;let[n,a]=r;return Array.isArray(a)?(i="",a.forEach(e=>{s=t?encodeURIComponent(e):e,i+=`${n}=${s}&`}),i.slice(0,-1)):(s=t?encodeURIComponent(a):a,i=`${n}=${s}`),`${e}&${i}`},"").substr(1):null,f=(e,t={})=>{let r=Object.assign({method:e.method||"GET",headers:e.headers},t),s=P(e.headers)["content-type"]||"";if("string"==typeof e.data)r.body=e.data;else if(s.includes("application/x-www-form-urlencoded")){let t=new URLSearchParams;for(let[r,s]of Object.entries(e.data||{}))t.set(r,s);r.body=t.toString()}else if(s.includes("multipart/form-data")||e.data instanceof FormData){let t=new FormData;if(e.data instanceof FormData)e.data.forEach((e,r)=>{t.append(r,e)});else for(let r of Object.keys(e.data))t.append(r,e.data[r]);r.body=t;let s=new Headers(r.headers);s.delete("content-type"),r.headers=s}else(s.includes("application/json")||"object"==typeof e.data)&&(r.body=JSON.stringify(e.data));return r};class p extends h{async request(e){let t,r;let s=f(e,e.webFetchExtra),i=v(e.params,e.shouldEncodeUrlParams),n=i?`${e.url}?${i}`:e.url,a=await fetch(n,s),o=a.headers.get("content-type")||"",{responseType:c="text"}=a.ok?e:{};switch(o.includes("application/json")&&(c="json"),c){case"arraybuffer":case"blob":r=await a.blob(),t=await w(r);break;case"json":t=await a.json();break;default:t=await a.text()}let l={};return a.headers.forEach((e,t)=>{l[t]=e}),{data:t,headers:l,status:a.status,url:a.url}}async get(e){return this.request(Object.assign(Object.assign({},e),{method:"GET"}))}async post(e){return this.request(Object.assign(Object.assign({},e),{method:"POST"}))}async put(e){return this.request(Object.assign(Object.assign({},e),{method:"PUT"}))}async patch(e){return this.request(Object.assign(Object.assign({},e),{method:"PATCH"}))}async delete(e){return this.request(Object.assign(Object.assign({},e),{method:"DELETE"}))}}u("CapacitorHttp",{web:()=>new p})},1163:function(e,t,r){e.exports=r(3035)}}]);